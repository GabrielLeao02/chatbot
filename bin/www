#!/usr/bin/env node

// bin/www
require('dotenv').config();

const http = require('http');
const debug = require('debug')('lywabot:server');
const app = require('../app'); // <- carrega o app exportado em app.js

// Porta da API
const port = normalizePort(process.env.PORT || '8081');
app.set('port', port);

// Cria servidor HTTP
const server = http.createServer(app);

// Sobe
server.listen(port, () => {
    console.log(`Server up listen ${port}`);
});
server.on('error', onError);
server.on('listening', onListening);

// Helpers
function normalizePort(val) {
    const p = parseInt(val, 10);
    if (Number.isNaN(p)) return val;
    if (p >= 0) return p;
    return false;
}

function onError(error) {
    if (error.syscall !== 'listen') throw error;

    const bind = typeof port === 'string' ? 'Pipe ' + port : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;
    debug('Listening on ' + bind);
}
